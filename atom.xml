<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[易界 - 产品经理改变世界之路]]></title>
  <subtitle><![CDATA[一个妄想改变世界的产品经理之路]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.ejapp.net/"/>
  <updated>2015-03-31T08:34:02.548Z</updated>
  <id>http://blog.ejapp.net/</id>
  
  <author>
    <name><![CDATA[羽飞凌]]></name>
    <email><![CDATA[yisenn@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Java初学指南]]></title>
    <link href="http://blog.ejapp.net/2015/03/25/java-start/"/>
    <id>http://blog.ejapp.net/2015/03/25/java-start/</id>
    <published>2015-03-25T02:00:00.000Z</published>
    <updated>2015-03-25T05:40:00.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/java.jpg" alt=""><br><a id="more"></a></p>
<h1 id="0-_安装">0. 安装</h1>
<h3 id="1-_安装Eclipse">1. 安装Eclipse</h3>
<p>Mac默认的Java版本是1.6，先用着。<br>Eclipse官网下载最新版：eclipse-java-luna-SR2-macosx-cocoa-x86_64.tar.gz<br>解压即可用</p>
<h3 id="2-_安装Gradle">2. 安装Gradle</h3>
<p>官网下载：<a href="http://www.gradle.org/downloads/" target="_blank" rel="external">http://www.gradle.org/downloads/</a><br>复制到/usr/local/lib文件夹下，然后将bin/gradle文件link到/usr/local/bin目录下</p>
<h1 id="1-_配置">1. 配置</h1>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/java.jpg" alt=""><br>]]>
    
    </summary>
    
      <category term="Java" scheme="http://blog.ejapp.net/tags/Java/"/>
    
      <category term="学习" scheme="http://blog.ejapp.net/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[App Store最新审核指南（2015年3月更新版）]]></title>
    <link href="http://blog.ejapp.net/2015/03/24/app-store-guide/"/>
    <id>http://blog.ejapp.net/2015/03/24/app-store-guide/</id>
    <published>2015-03-24T01:36:56.000Z</published>
    <updated>2015-03-24T04:07:48.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/app_store.jpg" alt=""></p>
<p><a id="more"></a><br><br></p>
<blockquote>
<p>苹果近日更新了App Store审核指南的相关章节，对此前版本进行了修改和完善。<br>除了增加应用截图、预览等限制外，使用Apple Pay进行定期付款的应用程序必须展示每个阶段所需款额，费用归属以及如何取消。<br>而从修改的政策部分可以看出，苹果对App store应用的审核更加严格，鉴于近来国内游戏踩雷屡见不鲜，审核标准请各位业内同学耐心阅读。</p>
</blockquote>
<h2 id="1-_条款和条件">1. 条款和条件</h2>
<p>1.1 为App Store开发程序，开发者必须遵守Program License Agreement(PLA)、人机交互指南(HIG)以及开发者和苹果签订的任何其他协议和合同。以下规则和例证旨在帮助开发者的程序能获得App Store的认可，而不是修改或删除任何其他协议中的条款。</p>
<h2 id="2-_功能">2. 功能</h2>
<p>2.1 崩溃的程序将会被拒绝。<br>2.2 存在错误的程序将会被拒绝。<br>2.3 跟开发者宣传不符的程序将会被拒绝。<br>2.4 无应用文档或隐藏功能与描述不符的程序将会被拒绝。<br>2.5 使用非公开API的程序将会被拒绝。<br>2.6 在指定容器范围外读写数据的程序将会被拒绝。<br>2.7 以任何方式或形式下载代码的程序将会被拒绝。<br>2.8 安装或运行其他可执行代码的程序将会被拒绝。<br>2.9 Demo版、trial版和test版的程序将会被拒绝。Beta版应用程序可通过TestFlight提交，并且必须遵守相关指南。(此前并未允许Beta版通过TestFlight提交)<br>2.10 iPhone程序必须不经修改就能以iPhone分辨率和2倍iPhone 3GS的分辨率在iPad上运行。<br>2.11 与App Store已有程序重复的应用可能会被拒绝，特别是数量很多的情况下，比如手电筒应用和爱经应用。<br>2.12 没有显著用途、不独特的应用程序或者与网站简单捆绑的应用有可能被拒;不提供任何持久娱乐价值的程序可能会被拒绝。<br>2.13 内容主要是营销材料或广告的程序将会被拒绝。<br>2.14 包含欺骗或虚假功能，却有没有标明的应用程序将会被拒绝。<br>2.15 大于100MB无法通过蜂窝网络下载的应用(App Store会自动禁止)。<br>2.16 多任务程序使用后台服务仅限于几种目的：VoIP、音频播放、地理位置、完成任务以及本地提醒等。<br>2.17 应用程序只允许使用iOS WebKit框架和WebKit Javascript浏览web内容。<br>2.18 鼓励酗酒或使用违禁药物，或引诱青少年饮酒或吸烟的程序将会被拒绝。<br>2.19 提供错误的系统诊断或不精确的设备数据的应用将会被拒绝。<br>2.20 向App Store上传大量相似版本程序的开发者将会从iOS开发者计划中除名。<br>2.21 简单一首歌曲或者一部影片应用要提交到iTunes store，书籍类应用应该提交到iBookstore。<br>2.22 随意根据环境(如定位或者运营商)限制用户使用的应用会被拒。<br>2.23 应用必须遵守iOS数据储存指导方针(iOS Data Storage Guidelines)，否则应用将被拒。<br>2.24 存放在Newsstand的应用必须遵守开发者项目许可协议(Program License Agreement)的表1、表2以及表3，否则应用将会被拒。<br>2.25 类似App store，或者基于购买或者促销的目的而展示其他应用的应用将会被拒绝<br>(限制更加严格，此前经过特殊审核批准(比如健康管理、航空以及其他无障碍需求等)，或者为特殊群体用户提供具有重大意义的附加值的应用是可以通过的)<br>2.26 只有当app是出于特殊审核需要(比如健康管理、航空以及无障碍需求等)或为特殊群体用户提供具有重大意义的附加值时，才可以展示和推荐自身以外的其他应用程序，否则应用程序将会被拒绝。</p>
<h2 id="3-_元数据(名称、描述、评级、排名等)近来厂商踩雷屡见不鲜，此部分请详细阅读">3. 元数据(名称、描述、评级、排名等)近来厂商踩雷屡见不鲜，此部分请详细阅读</h2>
<p>3.1 应用或者元数据中提到其他任何移动平台将会被拒。<br>3.2 带有占位符文本的程序将会被拒绝<br>3.3 应用程序的名称、描述、截图或者预览与应用的内容和功能不相关将会被拒绝。<br>(此前仅对描述有所限制)<br>3.4 为了不混淆用户，iTunes Connect中的应用名称应该和展示在设备上的应用名称一致。<br>3.5 不同尺寸的app icon要一致，否则会造成混淆。<br>3.6 图标、截图以及预览不符合4+年龄评级的程序将会被拒绝。(增加了对预览的限制)<br>3.7 目录与类型不适合于程序内容的程序将会被拒绝。<br>3.8 开发者有责任为其程序指定适合的评级。不相称的评级可能会由苹果公司修改。<br>3.9 开发者有责任为其程序指定恰当的关键字。不恰当的关键词可能会被苹果公司修改/删除。<br>3.10 试图通过伪造评论或者付费评论的方式在AppStore中操纵或者其欺骗用户评论(或者采用其他不正当方式)以提升排名的开发者将会被苹果从iOS开发者计划中除名。<br>3.11 在安装或打开应用之前，推荐用户重启iOS设备的应用将会被拒。<br>3.12 提交审核的应用程序应包含能正常运行的URL，比如支持服务URL和隐私政策URL。<br>3.13 应用程序的截图、预览或者营销文本没有清晰地指出附加内容或项目需要额外单独购买(比如使用IAP)将会被拒绝。<br>3.14 App预览仅能使用从应用程序捕获的视频屏幕、旁白、文本以及design overlays，否则应用程序将会被拒绝。<br>3.15 添加App预览的应用程序，未经许可展示真人个人信息将会被拒绝。<br>3.16 App预览仅能使用在所有选定地区内经过授权许可、用于此目的的音乐。<br>3.17 App预览包含未经授权的通过app播放的内容(比如iTunes playlist和YouTube流媒体)的应用将会被拒绝。</p>
<h2 id="4-_位置">4. 位置</h2>
<p>4.1 在收集、传输或使用位置数据之前未通知并获得用户同意的程序将会被拒绝。<br>4.2 将基于位置的API用于车辆、飞机或其他设备的自动控制或自主控制的应用程序将会被拒绝。<br>4.3 使用基于位置的API用于应急服务的应用程序将会被拒绝。<br>4.4 当与提供的功能或服务密切相关，或者为支持经过授权的广告时，应用程序才可以使用位置数据。</p>
<h2 id="5-_推送通知">5. 推送通知</h2>
<p>5.1 不使用苹果推送通知(APN)应用接口提供推送通知的程序将会被拒绝。<br>5.2 未从苹果获得Push Application ID便擅自使用APN服务的程序将会被拒绝。<br>5.3 在首次推送消息或者要求运行推送通知之前未获得用户许可的应用将会被拒绝。<br>5.4 使用推送通知发送敏感个人信息或机密信息的程序将会被拒绝。<br>5.5 使用推送通知发送非请求消息，或用于钓鱼或群发垃圾信息用途的程序将会被拒绝。<br>5.6 应用程序不可使用推送通知发送广告、促销或任何类型的直销信息。<br>5.7 应用程序不能向使用推送通知服务的用户收取费用。<br>5.8 使用推送通知会过多利用APN服务的网络流量或带宽或给设备带来过度负担的程序将会被拒绝。<br>5.9 如果应用程序传送病毒、文件、计算机代码或程序，并且对APN服务的正常运行造成损害或中断，那么该程序将会被拒绝。</p>
<h2 id="6-_游戏中心">6. 游戏中心</h2>
<p>6.1 向终端用户或任意第三方显示玩家ID的程序将会被拒绝。<br>6.2 将玩家ID用于任何未经游戏中心条款批准用途的程序将会被拒绝。<br>6.3 试图进行反向搜索、跟踪、关联、挖掘、获得或利用玩家ID、别名或通过游戏中心获得其他信息的开发者将会iOS开发者计划除名。<br>6.4 游戏中心信息(例如排行榜分数)，只能用于游戏中心批准的应用程序中。<br>6.5 利用游戏中心服务发送非请求信息，或用于钓鱼或群发垃圾邮件的程序将会被拒绝。<br>6.6 过多使用游戏中心网络流量或带宽的应用程序将会被拒绝。<br>6.7 如果程序能够传送病毒、文件、计算机代码或程序，并且对游戏中心服务的正常运行造成损害或中断，该程序将会被拒绝。</p>
<h2 id="7-_广告">7. 广告</h2>
<p>7.1 人工刷广告浏览量或者广告点击率的应用程序将会被拒绝。<br>7.2 包含空iAd广告的应用程序将会被拒绝。<br>7.3 主要设计目的在于显示广告的应用程序将会被拒绝。</p>
<h2 id="8-_商标与商品外观">8. 商标与商品外观</h2>
<p>8.1 应用程序必须遵守”Guidelines for Using Apple Trademarks and Copyrights”和”Apple Trademark List”中说明的所有条款与条件。<br>8.2 任何误导和暗示苹果公司是该应用程序来源或提供商，或者苹果公司以任何形式表示认可其质量或功能的应用程序将会被拒绝。<br>8.3 与目前已有苹果产品或者广告主题外观相似或混淆的应用程序将会被拒绝。<br>8.4 在应用程序名称中将苹果产品名拼错的应用程序(例如，GPS for Iphone，iTunz)将会被拒绝。<br>8.5 应用程序不得使用受保护的第三方材料(比如商标、版权以及专利)，不能违反第三方使用条款。必须提供使用这些材料的授权许可。<br>8.6 若无明确授权许可，从第三方来源处(比如YouTube、SoundCloud以及Vimeo等)下载音乐或者视频内容的应用程序将会被拒绝。</p>
<h2 id="9-_媒体内容">9. 媒体内容</h2>
<p>9.1 不使用媒体播放器框架(MediaPlayer Framework)获取音乐库中媒体内容的应用程序将会被拒绝。<br>9.2 用户界面模仿任何iPod或者iTunes界面的应用程序将会被拒绝。<br>9.3 通过蜂窝网络传输的音频流内容每5分钟不得超过5MB。<br>9.4 通过蜂窝网络传输超过10分钟的视频流内容必须使用HTTP Live Streaming协议，并且要包含一个基线为192kbps或者更低的HTTP实时流。</p>
<h2 id="10-_用户界面">10. 用户界面</h2>
<p>10.1 应用程序必须遵守苹果的《iOS Human Interface Guidelines》中所有的条款和条件。<br>10.2 外观与iPhone自带应用(比如App Store、iTunes Store和iBookstore)相似的应用程序将会被拒绝。<br>10.3 未能按苹果《iOS Human Interface Guidelines》描述正确使用系统提供的项目(比如按钮、图标)的应用将会被拒绝。<br>10.4 创建桌面/主屏幕环境或者模拟multi-App插件体验的应用程序将会被拒绝。<br>10.5 修改音量大小和铃声/静音等标准开关功能的应用程序将会被拒绝。<br>10.6 苹果和我们的客户高度推崇简单、精致、富有创造性以及经过精心设计的界面。虽然需要付出更多，但却非常值得。苹果设立了很高的门槛。如果你的用户界面太过复杂或者水准不高，可能会被拒绝。</p>
<h2 id="11-_购买与货币流通">11. 购买与货币流通</h2>
<p>11.1 使用App Store以外的渠道解锁或开启附加属性和功能的应用程序将会被拒绝。<br>11.2 使用应用内支付系统(IAP)以外的系统购买内容、功能或服务的应用软件将会被拒绝。<br>11.3 使用IAP购买实物商品或者用于该软件之外的商品和服务的应用软件将会被拒绝。<br>11.4 使用IAP购买积分(信用点)或者其他货币必须在本应用中消费。<br>11.5 使用IAP购买已过期积分或其他货币的应用软件将会被拒绝。<br>11.6 使用IAP订阅的内容至少要持续7天，而且允许在用户的其他iOS设备间共享。<br>11.7 使用IAP购买项目的应用程序必须指派正确的购买类型。<br>11.8 使用IAP购买iOS内置功能(如照相机，陀螺仪)的应用程序将会被拒绝。<br>11.9 含有超过限定时间的内容或服务的应用程序将会被拒绝，除经特定批准的内容(比如电影、电视节目音乐以及书籍)。<br>11.10 保险类应用程序必须免费，要遵守发布地区的法律，并且不能使用IAP。<br>11.11 一般而言，你的应用程序越贵，我们的评审会越深入。<br>11.12 提供订阅功能的应用必须使用IAP，苹果将会按照Developer Program License Agreement中的约定与开发者按30/70比例分成。<br>11.13 在应用内使用跳转至外部购买或订阅链接的应用将会被拒，比如”buy”按钮跳转至一个购买电子书的web页面。<br>11.14 只要应用内没有跳转至外部购买、订阅的按钮或链接，苹果允许这些应用读取或展示经批准的、在应用外购买或订阅内容(特别是杂志、报纸、书籍、音频、音乐、视频以及云存储内容)。苹果只能通过应用程序内的购买获得一部分收益。<br>11.15 应用程序可以只使用自动更新订阅期刊(报纸、杂志)、商业应用程序(企业类、效率类、专业创意类以及云存储类)和媒体类应用程序(视频、音频、声音)，否则应用程序将被拒绝。<br>11.16 当与特定的经过审核的实体产品(比如玩具)结合使用时，应用程序可以使用获得批准的附加特性和功能，只要附加功能完全依赖于该硬件产品(比如一款用于控制望远镜的应用程序)或者也可以在不使用实物产品的情况下使用应用程序，比如成就奖励或者使用IAP。<br>11.17 如果应用功能遵照各州和联邦法律，那么应用可以用来促进被认可的虚拟货币的流通。</p>
<h2 id="12-_抓取和聚合">12. 抓取和聚合</h2>
<p>12.1 从苹果网站(例如apple.com、iTunes Store、App Store、iTunes Connect以及Apple Developer Programs等)抓取任何信息或者使用苹果网站内容和服务进行排名的应用程序将会被拒绝。<br>12.2 应用软件可以使用获得批准的苹果RSS feeds，例如iTunes Store RSS feeds。<br>12.3 只是简单的网页剪切、内容整合或者收集链接的应用程序可能会被拒绝。</p>
<h2 id="13-_损害设备">13. 损害设备</h2>
<p>13.1 怂恿用户以可能造成损害的方式使用苹果设备的应用软件将会被拒绝。<br>13.2 快速耗光设备电量或产生过多热量的应用软件将会被拒绝。<br>13.3 能导致用户人身伤害的app将会被拒绝。</p>
<h2 id="14-_人身攻击">14. 人身攻击</h2>
<p>14.1 涉及诽谤、人身攻击性质以及内容狭隘卑鄙的应用软件或者打击特定个人或组织的应用软件将会被拒绝。<br>14.2 职业政治讽刺家和幽默作家不受这一条款约束。<br>14.3 展示用户创作内容(UGC)的应用程序必须提供一个过滤不良资讯的方法，一个用户可以标记侵犯性内容的机制，以及可以阻止辱骂用户的能力。</p>
<h2 id="15-_暴力">15. 暴力</h2>
<p>15.1 应用程序中出现人或动物被杀、致残以及枪击、刺伤、拷打等受伤情形的真实画面将会被拒绝。<br>15.2 出现描绘暴力或虐待儿童等内容的应用程序将会被拒绝。<br>15.3 游戏中出现的”敌人”不可指向一个特定种族、文化、一个真实存在的政府、企业或者其他任何现实中的实体。<br>15.4 对武器进行真实描述以怂恿非法使用或滥用这些武器的应用程序将会被拒绝。<br>15.5 包含俄罗斯轮盘赌博内容的游戏将会被拒。</p>
<h2 id="16-_令人反感的内容">16. 令人反感的内容</h2>
<p>16.1 应用程序中出现过于令人反感或者低俗的内容将会被拒绝。<br>16.2 在设计上激怒用户或令人感到厌恶的应用程序将会被拒绝。</p>
<h2 id="17-_隐私">17. 隐私</h2>
<p>17.1 在未经用户事先许可，或未告知用户如何使用信息以及在何处使用信息的情况下，应用程序不能传输用户数据。<br>17.2 要求用户共享电子邮箱地址和出生日期等私人信息才可使用其功能的应用程序将会被拒绝。<br>17.3 仅出于遵守适用的儿童隐私法规的目的，应用程序可以要求用户的出生日期(或者使用其他年龄评级机制)，但是必须包括一些有用的功能或者娱乐价值，不管用户年龄大小。<br>17.4 收集、传输以及分享未成年用户个人信息(比如名字、地址、邮件、位置、照片、视频、绘画、聊天信息以及其他个人数据，或者与以上所述相关的永久性标示符)的应用程序必须遵守应用儿童隐私法规，并且必须包含隐私条款。<br>17.5 包含账号注册或者访问用户现有账号的应用程序必须包含隐私策略，否则将会被拒绝。</p>
<h2 id="18-_色情">18. 色情</h2>
<p>18.1 含有色情素材，也就是《韦氏词典》中定义的”旨在激发情欲，对性器官或性行为的明确描述或展示，而无关美学或情绪感受”的程序将会被拒绝。<br>18.2 包含用户频繁提供的色情内容的应用程序(比如以前的“Chat Roulette”程序)将会被拒绝。</p>
<h2 id="19-_宗教，文化与种族">19. 宗教，文化与种族</h2>
<p>19.1 涉及宗教、文化或种族群体的引用或评论包含诽谤性、攻击性或狭隘内容，或会使特定群体遭受伤害或暴力的应用程序将会被拒绝。<br>19.2 程序可以包含或引用宗教经文，程序所提供的引用或翻译必须准确且不会引起误导。评论应该有教育意义，可以令人开阔眼界，而不应有煽动性。</p>
<h2 id="20-_竞赛、赌博、彩票以及抽奖">20. 竞赛、赌博、彩票以及抽奖</h2>
<p>20.1 彩票抽奖和竞赛必须由应用程序的开发者或者app所属公司发起。<br>20.2 应用程序必须展示彩票抽奖和竞赛的正式规则，并声明苹果不是发起者，也没有以任何方式参与活动。<br>20.3 开发者运营一款具有抽奖性质的应用必须经过法律允许，并且抽奖应用必须具备以下特征：报酬、运气以及奖品。<br>20.4 允许用户在应用中直接购买彩票或彩券的应用将会被拒。<br>20.5 提供真钱游戏(比如体育博彩、扑克牌、赌场游戏、赛马以及彩票)的应用程序必须有应用程序适用地区当地必要的许可和允许，必须限制在这些区域，必须可以从App Store免费下载。<br>20.6 使用IAP购买信誉或者货币，且结合真钱游戏的应用将会被拒绝。</p>
<h2 id="21-_慈善与援助">21. 慈善与援助</h2>
<p>21.1 包含可以向已认证的慈善组织捐赠功能的应用程序必须是免费的。<br>21.2 捐赠款项的募集必须通过Safari浏览器访问web页面或是手机短消息完成。</p>
<h2 id="22-_法律要件">22. 法律要件</h2>
<p>22.1 应用程序必须遵守所有发布地区当地法律，开发者有义务了解并遵守所有当地法律。<br>22.2 包含虚假，欺诈或误导性陈述的程序将会被拒绝。<br>22.3 任何用于招徕、促进或鼓励犯罪或明显鲁莽行为的应用程序将会被拒绝。<br>22.4 支持非法文件共享的程序将会被拒绝。<br>22.5 被设计用以非法赌博工具的应用程序(包括点算牌)将会被拒绝。<br>22.6 具有匿名或恶作剧拨打电话或发送类似短信/彩信功能的程序将会被拒绝。<br>22.7 任何开发暗中收集用户密码或用户私人数据程序的开发者将会从iOS开发者计划中除名。<br>22.8 包含非执法机构发布的DUI检查点信息，或者怂恿/协助酒后驾车的应用将会被拒绝。<br>22.9 计算药剂用量的应用程序必须由药品制造商或者认可机构发布，比如医院、保险公司以及高校。<br>22.10. 在未授权的情况下使用iTunes音乐预览的应用程序将会被拒绝。</p>
<h2 id="23-_Passbook">23. Passbook</h2>
<p>23.1 Passbook Passes可被用来支付或者接收支付，传递商业信息或者提供验证(比如电影票、飞机票、优惠券以及其他)，但把Passbook Passes用于其他用途的应用程序可能会遭到拒绝，并且会被撤销Passbook证书。<br>23.2 Passes必须包含有效的pass发行人有效的联系资料，否则app将会被拒绝，并且Passbook证书也会被取消。<br>23.3 Passes必须经过实体签名，并基于其名字、商标或者品牌进行分发，否则应用程序将会被拒绝，而Passbook证书也可能会被撤销。</p>
<h2 id="24-_儿童类别">24. 儿童类别</h2>
<p>24.1 儿童类别中的应用程序必须包含隐私政策，必须遵守适用的儿童隐私法规。<br>24.2 儿童类别中的应用程序不允许包括行为广告(比如app内部基于用户行动的服务广告)，任何在应用程序中展示的上下文广告必须适合儿童。<br>24.3 儿童类别中的应用程序必须得到家长许可或使用parental gate才能链接至应用程序外部或进行交易。<br>24.4 儿童类别中的应用程序必须标明”5岁以下，6-8岁或者9-11岁”。</p>
<h2 id="25-_扩展">25. 扩展</h2>
<p>25.1 包含扩展的应用程序必须遵照App Extension Programming Guide要求。<br>25.2 包含扩展的应用程序必须提供某些功能(辅助屏幕，附加设置)，否则将会被拒绝。<br>25.3 如果扩展的视图中包含营销推广、广告或者IAP内容，那么包含该扩展的应用将会被拒绝。<br>25.4 键盘扩展必须提供一个切换至下个键盘的方法。<br>25.5 键盘扩展必须具有离线访问功能，否则将会被拒绝。<br>25.6 键盘扩展必须提供和App Extension Programming Guide描述一致的数字和十进键盘类型，否则将会被拒绝。<br>25.7 提供键盘扩展的应用必须拥有基本的功能分类和隐私政策，否则将会被拒绝。<br>25.8 提供键盘扩展的应用程序只允许收集用户活动以增强键盘扩展在iOS设备上的功能，否则将会被拒绝。</p>
<h2 id="26-_HomeKit">26. HomeKit</h2>
<p>26.1 使用HomeKit框架的应用程序必须有提供家庭自动化服务的主要目的。<br>26.2 使用HomeKit框架的应用程序必须在营销文本中说明用途，同时必须提供隐私政策，否则将会被拒绝。<br>26.3 应用程序不允许将从HomeKit API收集的数据用于广告宣传或者其他基于使用的数据挖掘。<br>26.4 出于其他目的使用从HomeKit API收集的数据，而不是用于提高用户体验或者家庭自动化功能中硬件/软件性能，这类应用将会被拒绝。</p>
<h2 id="27-_HealthKit">27. HealthKit</h2>
<p>27.1 使用HealthKit或者ResearchKit框架(出于健康目的用于进行人体生物学研究的框架)的应用程序，必须遵守其所有适用区域的法律，以及iOS Developer Program License Agreement中的3.3.28和3.39条款。(增加了对于ResearchKit框架的支持)<br>27.2 将虚假或者错误的数据写入HealthKit的应用程序将会被拒绝。<br>27.3 使用HealthKit框架的应用程序在iCloud中储存用户健康信息将会被拒绝。<br>27.4 应用程序不允许将通过HealthKit API收集的用户数据用作广告宣传或者基于使用的数据挖掘目的，除了改善健康、医疗、健康管理以及医学研究目的。<br>27.5 未经用户许可与第三方分享通过HealthKit API获得的用户数据的应用程序将会被拒绝。<br>27.6 使用HealthKit框架的应用程序必须在营销文本中说明集成了Health app，同时必须在app用户界面清楚阐释HealthKit的功能。<br>27.7 使用HealthKit框架的应用程序必须提供隐私政策，否则将会被拒绝。<br>27.8 提供诊断、治疗建议，或者控制诊断疾病的硬件，或者治疗疾病的应用程序，若没有根据要求提供书面的监管审批，将会被拒绝。<br>27.9 收集人体生物学研究相关数据的应用程序必须要获得参与者的许可，对于未成年人，应用程序要得到其父母或者监护人的许可。许可内容必须包括：(a)研究的性质、目的以及持续性;(b)参与流程、风险以及受益(福利);(c)信息的机密性和数据处理(包括与任何与第三方的共享);(d)参与者问题切入点;(e)取消方法(新增)</p>
<h2 id="28-_TestFlight">28. TestFlight</h2>
<p>28.1 应用程序仅能使用TestFlight对以公开发布为目的的应用进行beta版测试，且必须遵守完整的App Review Guidelines。<br>28.2 当版本中包含的内容或功能有重大变化时，使用TestFlight的应用程序必须提交审核。<br>28.3 使用TestFlight的应用程序不允许分发给测试者，以作为任何形式的补偿。</p>
<h2 id="29-_Apple_Pay">29. Apple Pay</h2>
<p>29.1 使用Apple Pay的应用程序必须在出售任何商品或者服务之前为用户提供所有材料的购买信息，否则将会被拒绝。使用Apple Pay进行定期付款的应用程序必须提供最低限度续费期限，付费将持续直至被取消，每个阶段所付款额，费用付款归属，以及如何取消等。<br>29.2 使用Apple Pay的应用程序必须正确使用Apple Pay Human Interface Guidelines中的Apple Pay标识和用户界面元素，否则将会被拒绝。<br>29.3 使用Apple Pay作为购买机制的应用程序所提供的商品或服务不能触犯任何交付地范围内的法律，也不能用作任何非法目的。<br>29.4 使用Apple Pay的应用程序必须提供隐私政策，否则将会被拒绝。<br>29.5 只有为了促进或提高商品和服务的交付，或者依照法律要件，使用Apple Pay的应用程序才能与第三方分享通过Apple Pay获得的数据。</p>
<p><br></p>
<blockquote>
<p>来源：拇指巴士（微信公众号：muzhibus）</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/app_store.jpg" alt=""></p>
<p>]]>
    
    </summary>
    
      <category term="App Store" scheme="http://blog.ejapp.net/tags/App-Store/"/>
    
      <category term="产品" scheme="http://blog.ejapp.net/categories/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动App的接口设计]]></title>
    <link href="http://blog.ejapp.net/2015/03/16/design-app-interface/"/>
    <id>http://blog.ejapp.net/2015/03/16/design-app-interface/</id>
    <published>2015-03-16T10:12:11.000Z</published>
    <updated>2015-03-16T11:01:40.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/interface.png" alt=""></p>
<a id="more"></a>

<h1 id="1-_通讯协议">1. 通讯协议</h1>
<p>对于只是进行CRUD操作的App，通常采用HTTP协议，为了安全也可以采用HTTPS协议。IM软件可以选择使用XMPP协议。<br><br><br>其他一些特殊场景的App可能使用基于Socket自定义协议。<br>在需要保证需要传输数据到对方的时候应该选择TCP协议，比如文件传输。而像在线视频播放这些，可以不用保证数据100%被接受的，可以用UDP，因为丢失一帧画面数据没什么影响，而且用UDP速度会更快。</p>
<h1 id="2-_数据格式">2. 数据格式</h1>
<p>比较通用的数据交互格式是JSON和XML。在现在，JSON格式使用的更为广泛，因为结构简单而且解析方便。<br><br><br>iOS提供了NSJSONSerialization类解析JSON。<br>Android SDK本身就自带了org.json及android.utils包里面的JsonReader 和 JsonWriter类来解析JSON。<br>也可以考虑使用Google的Gson，阿里巴巴的fastjson，以及Jackson这些开源JSON处理的库，它们提供了更多的功能，也有更好的性能。</p>
<h1 id="3-_RESTful设计">3. RESTful设计</h1>
<p>可以参考阮一峰文章：<a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2014/05/restful_api.html</a><br><br><br>简单总结：</p>
<ol>
<li>独立的API域名，比如：<a href="https://api.example.com" target="_blank" rel="external">https://api.example.com</a></li>
<li>版本，比如：<a href="https://api.example.com/v1/" target="_blank" rel="external">https://api.example.com/v1/</a></li>
<li>名词路径，API具体网址，往往与数据库的表名对应，比如：<a href="https://api.example.com/v1/zoos" target="_blank" rel="external">https://api.example.com/v1/zoos</a></li>
<li>HTTP动词，对于资源的具体操作类型，由HTTP动词表示，比如GET、POST、PUT、DELETE</li>
<li>参数，用于过滤返回结果，比如?limit=10：指定返回记录的数量</li>
<li>返回状态及错误处理，任何请求都应该返回状态码，如果出错了还应包括错误信息</li>
<li>返回结果，应该返回完成的对象列表、单个资源对象、空文档等</li>
</ol>
<h1 id="4-_性能">4. 性能</h1>
<p>API设计应该便于测试，可以加入性能计时来方便调试性能。</p>
<h1 id="5-_安全性">5. 安全性</h1>
<p>有几种常见做法：<br><br></p>
<ol>
<li><p>请求头里带用户username和password，到服务器端做验证，通过才继续下边业务逻辑。<br>优点：防止了服务器端api被随意调用。<br>缺点：每次都交互用户名和密码，交互量大，且密码明文传输不安全。</p>
</li>
<li><p>第一次请求，要求username和password，验证通过，种cookie到客户端，app保存cookie值，每次请求带上cookie。<br>点评：和pc上浏览器认证的原理一样了。</p>
</li>
<li><p>制定一个token生成规则，按某些服务器端和客户端都拥有的共同属性生成一个随机串，客户端生成这个串，服务器收到请求也校验这个串。<br>缺点：随机串生成规则要保密。<br>比如:一个使用php框架的工程，框架每次交互都会有 module和action两个参数做路由，这样的话，我就可以用下边这个规则来生成token<br><br>app要请求用户列表，api是<code>index.php?module=user&amp;action=list</code><br>app生成<code>token = md5sum (&#39;user&#39;.&#39;2012-11-28&#39;.&#39;#$@%!&#39;.list) = 880fed4ca2aabd20ae9a5dd774711de2;</code><br>实际发起请求为<code>index.php?module=user&amp;action=list&amp;token=880fed4ca2aabd20ae9a5dd774711de2</code></p>
</li>
</ol>
<h1 id="6-_参考">6. 参考</h1>
<p>Github的API设计应该算得上优秀，值得参考：<a href="https://developer.github.com/v3/" target="_blank" rel="external">https://developer.github.com/v3/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/interface.png" alt=""></p>
]]>
    
    </summary>
    
      <category term="软件设计" scheme="http://blog.ejapp.net/tags/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="开发" scheme="http://blog.ejapp.net/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[正则表达式在iOS中的运用]]></title>
    <link href="http://blog.ejapp.net/2015/02/09/ios-reg-apply/"/>
    <id>http://blog.ejapp.net/2015/02/09/ios-reg-apply/</id>
    <published>2015-02-09T07:17:36.000Z</published>
    <updated>2015-02-09T08:07:27.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/regular-expression.jpg" alt=""></p>
<a id="more"></a>

<p><br><br>感谢<code>lady-奕奕</code>的文章，原文地址：<a href="http://my.oschina.net/u/1245365/blog/376517" target="_blank" rel="external">http://my.oschina.net/u/1245365/blog/376517</a></p>
<h1 id="1-_什么是正则表达式">1. 什么是正则表达式</h1>
<p>正则表达式，又称正规表示法，是对字符串操作的一种逻辑公式。正则表达式可以检测给定的字符串是否符合我们定义的逻辑，也可以从字符串中获取我们想要的特定部分。它可以迅速地用极简单的方式达到字符串的复杂控制。</p>
<h1 id="2-_正则表达式的语法">2. 正则表达式的语法</h1>
<p>看一个过滤纯数字的例子</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)validateNumber:(<span class="built_in">NSString</span> *) textString</div><div class="line">{</div><div class="line">    <span class="built_in">NSString</span>* number=<span class="string">@"^[0-9]+$"</span>;</div><div class="line">    NSPredicate *numberPre = [NSPredicate predicateWithFormat:<span class="string">@"SELF MATCHES %@"</span>,number];</div><div class="line">    <span class="keyword">return</span> [numberPre evaluateWithObject:textString];</div><div class="line">}</div></pre></td></tr></table></figure>

<p>其中下述语句就是一个正则表达式</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@"</span>^[<span class="number">0</span>-<span class="number">9</span>]+<span class="variable">$"</span></div></pre></td></tr></table></figure>

<p>它代表了字符串中只能包含&gt;=1个0-9的数字，语法是不是有一些怪异？<br>下面我们先撇开iOS中的正则表达式的语法，用通俗的正则表达式语法来为介绍一下。（iOS语法与通俗的正则表达式语法相同，不同在于对转义字符的处理上(语言类的都相同)）</p>
<h3 id="语法">语法</h3>
<p>首先，特殊符号’^’和’$’。他们的作用是分别指出一个字符串的开始和结束。eg：<br>“^one”：表示所有以”one”开始的字符串（”one cat”，”one123”，·····）；<br>类似于:<code>- (BOOL)hasPrefix:(NSString *)aString;</code><br>“a dog$”：表示所以以”a dog”结尾的字符串（”it is a dog”，·····）；<br>类似于:<code>- (BOOL)hasSuffix:(NSString *)aString;</code><br>“^apple$”：表示开始和结尾都是”apple”的字符串，这个是唯一的~；<br>“banana”：表示任何包含”banana”的字符串。<br>类似于 iOS8的新方法<code>- (BOOL)containsString:(NSString *)aString</code>, 搜索子串用的。<br><br></p>
<p>‘<em>‘，’+’和’?’这三个符号，表示一个或N个字符重复出现的次数。它们分别表示“没有或更多”（[0,+∞]取整），“一次或更多”（[1,+∞]取整），“没有或一次”（[0,1]取整）。<br>下面是几个例子：<br><br><br>“ab</em>“：表示一个字符串有一个a后面跟着零个或若干个b（”a”, “ab”, “abbb”,……）；<br>“ab+”：表示一个字符串有一个a后面跟着至少一个b或者更多（ “ab”, “abbb”,……）；<br>“ab?”：表示一个字符串有一个a后面跟着零个或者一个b（ “a”, “ab”）；<br>“a?b+$”：表示在字符串的末尾有零个或一个a跟着一个或几个b（ “b”,”ab”,”bb”,”abb”,……）。<br><br><br>可以用大括号括起来（{}），表示一个重复的具体范围。例如<br>“ab{4}”：表示一个字符串有一个a跟着4个b（”abbbb”）；<br>“ab{1,}”：表示一个字符串有一个a跟着至少1个b（”ab”,”abb”,”abbb”,……)；<br>“ab{3,4}”：表示一个字符串有一个a跟着3到4个b（”abbb”,”abbbb”)。<br><br><br>那么，“<em>”可以用{0，}表示，“+”可以用{1，}表示，“?”可以用{0，1}表示<br><em>*注意：可以没有上限，但是不能没有下限！例如“ab{,5}”是错误的写法</em></em></p>
<p><br><br>“ | “表示“或”操作：<br>“a|b”：表示一个字符串里有”a”或者”b”；<br>“(a|bcd)ef”：表示”aef”或”bcdef”；<br>“(a|b)*c”：表示一串”a””b”混合的字符串后面跟一个”c”；</p>
<p><br><br>方括号”[ ]”表示在括号内的众多字符中，选择1-N个括号内的符合语法的字符作为结果，例如<br>“[ab]”：表示一个字符串有一个”a”或”b”（相当于”a|b”）；<br>“[a-d]”：表示一个字符串包含小写的’a’到’d’中的一个（相当于”a|b|c|d”或者”[abcd]”）；<br>“^[a-zA-Z]”：表示一个以字母开头的字符串；<br>“[0-9]a”：表示a前有一位的数字；<br>“[a-zA-Z0-9]$”：表示一个字符串以一个字母或数字结束。</p>
<p><br><br>“.”匹配除“\r\n”之外的任何单个字符：<br>“a.[a-z]”：表示一个字符串有一个”a”后面跟着一个任意字符和一个小写字母；<br>“^.{5}$”：表示任意1个长度为5的字符串；</p>
<p><br><br>“\num” 其中num是一个正整数。表示”\num”之前的字符出现相同的个数，例如<br>“(.)\1”：表示两个连续的相同字符。<br>“10{1,2}” : 表示数字1后面跟着1或者2个0 (“10”,”100”)。<br>“ 0{3,} “ 表示数字为至少3个连续的0 （“000”，“0000”，······）。</p>
<p><br><br>在方括号里用’^’表示不希望出现的字符，’^’应在方括号里的第一位。<br>“@[^a-zA-Z]@”表示两个”@”中不应该出现字母）。</p>
<p><br><br>常用的还有：<br>“ \d “匹配一个数字字符。等价于[0-9]。<br>“ \D”匹配一个非数字字符。等价于[^0-9]。<br>“ \w “匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9<em>]”。<br>“ \W ”匹配任何非单词字符。等价于“[^A-Za-z0-9</em>]”。</p>
<p><br><br>iOS中书写正则表达式，碰到转义字符，多加一个“\”,例如：<br>全数字字符：@”^\d+$”</p>
<h1 id="3-_iOS中正则表达式">3. iOS中正则表达式</h1>
<h3 id="1-_正则表达式与NSPredicate连用，eg：">1. 正则表达式与NSPredicate连用，eg：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)validateNumber:(<span class="built_in">NSString</span> *) textString</div><div class="line">{</div><div class="line">    <span class="built_in">NSString</span>* number=<span class="string">@"^[0-9]+$"</span>;</div><div class="line">    NSPredicate *numberPre = [NSPredicate predicateWithFormat:<span class="string">@"SELF MATCHES %@"</span>,number];</div><div class="line">    <span class="keyword">return</span> [numberPre evaluateWithObject:textString];</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="2-_NSString方法">2. NSString方法</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *searchText = <span class="string">@"rangeOfString"</span>;</div><div class="line"><span class="built_in">NSRange</span> range = [searchText rangeOfString:<span class="string">@"^[0-9]+$"</span> options:NSRegularExpressionSearch];</div><div class="line"><span class="keyword">if</span> (range<span class="variable">.location</span> != <span class="built_in">NSNotFound</span>) {</div><div class="line">   <span class="built_in">NSLog</span>(<span class="string">@"range ：%@"</span>, [searchText substringWithRange:range]);</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="3-_正则表达式类（NSRegularExpression）">3. 正则表达式类（NSRegularExpression）</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSString</span> *searchText = @<span class="string">"you want to match"</span>;    </div><div class="line"><span class="type">NSError</span> *error = <span class="type">NULL</span>;</div><div class="line"><span class="type">NSRegularExpression</span> *regex = [<span class="type">NSRegularExpression</span> regularExpressionWithPattern:@<span class="string">"^[0-9]+$"</span> options:<span class="type">NSRegularExpressionCaseInsensitive</span> error:&error];</div><div class="line"><span class="type">NSTextCheckingResult</span> *<span class="literal">result</span> = [regex firstMatchInString:searchText options:<span class="number">0</span> <span class="type">range</span>:<span class="type">NSMakeRange</span>(<span class="number">0</span>, [searchText length])];</div><div class="line"><span class="keyword">if</span> (<span class="literal">result</span>) {</div><div class="line">   <span class="type">NSLog</span>(@<span class="string">"%@"</span>, [searchText substringWithRange:<span class="literal">result</span>.<span class="type">range</span>]);</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="4-_四、常用的正则表达式">4. 四、常用的正则表达式</h1>
<p>以下红色字符串是常用的正则表达式（以下正则表达式来自百度百科） </p>
<p>1.验证用户名和密码：”^[a-zA-Z]\w{5,15}$” </p>
<p>2.验证电话号码：（”^(\d{3,4}-)\d{7,8}$”）</p>
<p>eg：021-68686868  0511-6868686；</p>
<p>3.验证手机号码：”^1[3|4|5|7|8][0-9]\d{8}$”；</p>
<p>4.验证身份证号（15位或18位数字）：”\d{14}[[0-9],0-9xX]”；</p>
<p>5.验证Email地址：(“^\w+([-+.]\w+)<em>@\w+([-.]\w+)</em>.\w+([-.]\w+)*$”)；</p>
<p>6.只能输入由数字和26个英文字母组成的字符串：(“^[A-Za-z0-9]+$”) ;</p>
<p>7.整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$</p>
<p>8.只能输入数字：”^[0-9]*$”。</p>
<p>9.只能输入n位的数字：”^\d{n}$”。</p>
<p>10.只能输入至少n位的数字：”^\d{n,}$”。</p>
<p>11.只能输入m~n位的数字：”^\d{m,n}$”。</p>
<p>12.只能输入零和非零开头的数字：”^(0|[1-9][0-9]*)$”。</p>
<p>13.只能输入有两位小数的正实数：”^[0-9]+(.[0-9]{2})?$”。</p>
<p>14.只能输入有1~3位小数的正实数：”^[0-9]+(.[0-9]{1,3})?$”。</p>
<p>15.只能输入非零的正整数：”^+?[1-9][0-9]*$”。</p>
<p>16.只能输入非零的负整数：”^-[1-9][]0-9”*$。</p>
<p>17.只能输入长度为3的字符：”^.{3}$”。</p>
<p>18.只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。</p>
<p>19.只能输入由26个大写英文字母组成的字符串：”^[A-Z]+$”。</p>
<p>20.只能输入由26个小写英文字母组成的字符串：”^[a-z]+$”。</p>
<p>21.验证是否含有^%&amp;’,;=?$\”等字符：”[^%&amp;’,;=?$\x22]+”。</p>
<p>22.只能输入汉字：”^[\u4e00-\u9fa5]{0,}$”。</p>
<p>23.验证URL：”^<a href="http://([\\w-]+\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$&quot;。" target="_blank" rel="external">http://([\\w-]+\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$&quot;。</a></p>
<p>24.验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01”～”09”和”10”～”12”。</p>
<p>25.验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01”～”09”、”10”～”29”和“30”~“31”。</p>
<p>26.获取日期正则表达式：\d{4}[年|-|.]\d{\1-\12}[月|-|.]\d{\1-\31}日?</p>
<p>评注：可用来匹配大多数年月日信息。</p>
<p>27.匹配双字节字符(包括汉字在内)：[^\x00-\xff]</p>
<p>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p>
<p>28.匹配空白行的正则表达式：\n\s*\r</p>
<p>评注：可以用来删除空白行</p>
<p>29.匹配HTML标记的正则表达式：&lt;(\S<em>?)[^&gt;]</em>&gt;.<em>?&lt;/&gt;|&lt;.</em>? /&gt;</p>
<p>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p>
<p>30.匹配首尾空白字符的正则表达式：^\s<em>|\s</em>$</p>
<p>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p>
<p>31.匹配网址URL的正则表达式：[a-zA-z]+://[^\s]*</p>
<p>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p>
<p>32.匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$</p>
<p>评注：表单验证时很实用</p>
<p>33.匹配腾讯QQ号：[1-9][0-9]{4,}</p>
<p>评注：腾讯QQ号从10 000 开始</p>
<p>34.匹配中国邮政编码：[1-9]\d{5}(?!\d)</p>
<p>评注：中国邮政编码为6位数字</p>
<p>35.匹配ip地址：((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/regular-expression.jpg" alt=""></p>
]]>
    
    </summary>
    
      <category term="正则" scheme="http://blog.ejapp.net/tags/%E6%AD%A3%E5%88%99/"/>
    
      <category term="iOS" scheme="http://blog.ejapp.net/tags/iOS/"/>
    
      <category term="开发" scheme="http://blog.ejapp.net/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[配置iOS消息推送及制作证书方法]]></title>
    <link href="http://blog.ejapp.net/2015/02/09/ios-notification-cert/"/>
    <id>http://blog.ejapp.net/2015/02/09/ios-notification-cert/</id>
    <published>2015-02-09T06:48:52.000Z</published>
    <updated>2015-02-09T06:57:00.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/remote_notif_simple.png" alt=""></p>
<a id="more"></a>

<h1 id="1-_配置消息推送服务">1. 配置消息推送服务</h1>
<h3 id="创建App_ID">创建App ID</h3>
<ul>
<li>如果你已经在Xcode中开启了相关服务，比如Game Center或者应用内支付，则已经帮你创建好了App ID</li>
<li>如果没有开启相关服务，则可以登录苹果会员中心，自行创建<br><img src="/images/locateappid.png" alt=""></li>
</ul>
<h3 id="开启消息推送服务">开启消息推送服务</h3>
<ul>
<li>必须在苹果会员中心网站上开启服务</li>
<li>选择对应的App ID，开启服务，并选择创建SSL证书的类型。该证书用于允许你的服务器连接上苹果APN<br><img src="/images/enablepushnotifications.png" alt=""></li>
</ul>
<h1 id="2-_制作消息推送证书">2. 制作消息推送证书</h1>
<h3 id="制作客户端SSL证书">制作客户端SSL证书</h3>
<ul>
<li>在上一个页面点击创建相应的证书可继续创建，或者见下</li>
<li>在苹果会员中心的Certificates菜单下创建新的证书</li>
<li><p>选择“Apple Push Notification service SSL”类型<br><img src="/images/ios_apns_certificate_2.png" alt=""></p>
</li>
<li><p>在上一步中点击所选择的证书类型，会跳转到创建证书页面<br><img src="/images/ios_apns_certificate.png" alt=""></p>
</li>
</ul>
<h3 id="制作-certSigningRequest文件">制作.certSigningRequest文件</h3>
<ul>
<li>这里会需要你上传.certSigningRequest后缀的文件</li>
<li>此文件需要在电脑上生成，步骤如下：</li>
<li>打开 钥匙串访问 -&gt; 证书助理 -&gt; 从证书颁发机构请求证书</li>
<li><p>填入开发者帐号的邮箱，常用名称（使用英文），CA电子邮箱留空，然后存储到磁盘<br><img src="/images/request_cert.png" alt=""></p>
</li>
<li><p>创建完后回到刚才上传证书的页面上传文件，完成后消息推送服务已开启，证书里会多一个APN类型的证书，下载该证书下来，默认为aps_development.cer文件</p>
</li>
</ul>
<h3 id="制作APNS服务器证书p12文件">制作APNS服务器证书p12文件</h3>
<ul>
<li>双击安装刚下载下来的aps_development.cer，如果没有弹出钥匙串安装窗口，可换个姿势多试几次</li>
<li>安装成功后，在钥匙串访问，证书里找到该证书”Apple DevelopMent IOS Push Services:<strong><strong>**</strong></strong>“</li>
<li>点开证书前的小箭头，同时选中证书及专用密钥，右键导出成P12文件，密码建议为空</li>
</ul>
<h3 id="备选方法">备选方法</h3>
<ul>
<li>在钥匙串访问中，在密钥分类里找到刚创建的与”常用名称”同名的成对密钥文件，选择专用密钥，右键导出成P12文件</li>
<li>现在我们手上有三个文件：<code>CSR认证签名申请文件(.certSigningRequest)</code>, <code>专用密钥(.p12)</code>, <code>SSL证书(.cer)</code>文件</li>
</ul>
<figure class="highlight bash"><figcaption><span>生成p12文件</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将aps_development.cer转换成aps_development.pem格式</span></div><div class="line">openssl x509 -in aps_development.cer -inform DER -out aps_development.pem -outform PEM</div><div class="line"><span class="comment"># 将p12格式的专用密钥转换成pem，依次输入密码</span></div><div class="line">openssl pkcs12 -nocerts -out APNS_Noenc.pem -in APNS.p12</div><div class="line"><span class="comment"># 创建PKCS#12格式的p12文件</span></div><div class="line">openssl pkcs12 -export -in aps_development.pem -inkey APNS_Noenc.pem -certfile APNS.certSigningRequest -name <span class="string">"aps_development"</span> -out aps_development.p12</div></pre></td></tr></table></figure>



<figure class="highlight bash"><figcaption><span>生成pem文件</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">前<span class="number">2</span>部与上方法相同，最后一步改为：</div><div class="line"><span class="comment"># 对生成的这两个pem文件合并成一个pem文件，来把证书和私钥整合到一个文件里</span></div><div class="line">cat PushChatCert.pem PushChatKey.pem &gt; ck.pem</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/remote_notif_simple.png" alt=""></p>
]]>
    
    </summary>
    
      <category term="iOS" scheme="http://blog.ejapp.net/tags/iOS/"/>
    
      <category term="苹果" scheme="http://blog.ejapp.net/tags/%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="开发" scheme="http://blog.ejapp.net/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何使用iOS真机测试 2015]]></title>
    <link href="http://blog.ejapp.net/2015/02/07/ios-device-test/"/>
    <id>http://blog.ejapp.net/2015/02/07/ios-device-test/</id>
    <published>2015-02-07T03:37:18.000Z</published>
    <updated>2015-02-09T06:52:15.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/app_distribute_quick_start.png" alt=""></p>
<a id="more"></a>

<p><br></p>
<h3 id="注意：新版本的Xcode已经不需要我们手动创建证书及App_ID等操作，全部在Xcode端即可完成"><div style="color: red"><strong>注意：新版本的Xcode已经不需要我们手动创建证书及App ID等操作，全部在Xcode端即可完成</strong></div></h3>
<h1 id="0-准备">0.准备</h1>
<ul>
<li>一台安装了Xcode 6或更高版本的Mac电脑</li>
<li>最好升级OS X和Xcode到最新版本</li>
<li>Xcode项目编译无错误</li>
<li>拥有苹果开发者帐号 </li>
</ul>
<h1 id="1-_添加账号到Xcode">1. 添加账号到Xcode</h1>
<h3 id="添加Apple_ID到Xcode">添加Apple ID到Xcode</h3>
<ul>
<li>打开 Xcode &gt; Preferences</li>
<li>选择 Accounts</li>
<li>选择添加 Apple ID</li>
</ul>
<p><img src="/images/addingaccount.png" alt=""><br><img src="/images/accountsjoinbutton.png" alt=""></p>
<h1 id="2-_创建Provisioning_Profiles">2. 创建Provisioning Profiles</h1>
<h3 id="设置Bundle_ID">设置Bundle ID</h3>
<ul>
<li>Buddle ID由企业ID前缀跟项目名称2部分组成，建议前缀用全小写</li>
</ul>
<p><img src="/images/ios_app_target_pane.png" alt=""></p>
<h3 id="指定Team">指定Team</h3>
<p><img src="/images/assignteam_ios.png" alt=""></p>
<h3 id="创建Team_Provisioning_Profile">创建Team Provisioning Profile</h3>
<ul>
<li>接好iOS设备至PC</li>
<li>选择编译运行的目标为该设备</li>
<li>指定Team</li>
<li>如果出现Fix Issue按钮，点击它，Xcode会自动创建好</li>
<li>成功的话如图所示</li>
</ul>
<p><img src="/images/team_warning_disappears.png" alt=""></p>
<h3 id="在真机上运行App">在真机上运行App</h3>
<ul>
<li><p>现在已经可以在真机上运行App了，试试吧<br><img src="/images/launchappondevice.png" alt=""></p>
</li>
<li><p>可以通过苹果会员中心查看下载你的证书<br><img src="/images/portalcerts.png" alt=""></p>
</li>
<li><p>现在已经不需要像以前先创建证书，在上传导入啥的，直接系统帮你设置好了，证书保存在钥匙串的登录类里<br><img src="/images/keychaincerts.png" alt=""></p>
</li>
</ul>
<h1 id="3-_开启App服务">3. 开启App服务</h1>
<h3 id="查看App服务">查看App服务</h3>
<p><img src="/images/capabilities_pane.png" alt=""></p>
<h3 id="开启App服务">开启App服务</h3>
<ul>
<li>如果是Mac App，需要先开启沙盒App Sandbox</li>
<li>点开每项服务，会显示设置的步骤，系统会自动帮你按步骤设置好<br><img src="/images/enable_game_center_success.png" alt=""></li>
</ul>
<h3 id="设置App_ID">设置App ID</h3>
<ul>
<li>Xcode自动创建了一个通用的App ID(*)，适用于只开启了基本的服务，可以用于多个App</li>
<li><p>如果在Xcode里开启了其他服务，比如iCloud，Game Center等，会自动根据项目设置的Bundle ID创建新的App ID，并自动设置好相应的服务，如果该ID已存在则更新它<br><img src="/images/view_explicit_team_profile_in_xcode.png" alt=""></p>
</li>
<li><p>只有消息推送服务是个例外，它必须在会员中心里开启，Xcode不会自动配置<br><img src="/images/verifyappid.png" alt=""></p>
</li>
</ul>
<h1 id="总结">总结</h1>
<p>可以看出新版的Xcode极大的优化了产品发布流程，使得产品的测试、发布简单方便许多</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/app_distribute_quick_start.png" alt=""></p>
]]>
    
    </summary>
    
      <category term="iOS" scheme="http://blog.ejapp.net/tags/iOS/"/>
    
      <category term="测试" scheme="http://blog.ejapp.net/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="苹果" scheme="http://blog.ejapp.net/tags/%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="开发" scheme="http://blog.ejapp.net/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[发布iOS应用到苹果App Store 2015]]></title>
    <link href="http://blog.ejapp.net/2015/02/07/ios-app-distribution/"/>
    <id>http://blog.ejapp.net/2015/02/07/ios-app-distribution/</id>
    <published>2015-02-07T02:36:57.000Z</published>
    <updated>2015-02-10T07:28:36.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/app_distribute.png" alt=""></p>
<a id="more"></a>

<h1 id="0-_准备">0. 准备</h1>
<ul>
<li>拥有苹果开发者帐号并添加进Xcode</li>
<li>配置好App服务</li>
<li>配置好Xcode项目的发布设置</li>
</ul>
<h1 id="1-_在iTunes_Connect上新建App">1. 在iTunes Connect上新建App</h1>
<ul>
<li>按照说明完善资料，包括选择App ID，名称，截图，描述，价格等</li>
<li>如果第一次用，还需要设置”协议、税务和银行业务”<br><img src="/images/home-page-cropped.png" alt=""></li>
</ul>
<h1 id="2-_打包及验证App">2. 打包及验证App</h1>
<ul>
<li><p>选择菜单 Product &gt; Scheme &gt; Edit Scheme，选中Archive进行配置<br><img src="/images/archiveschemesettings.png" alt=""></p>
</li>
<li><p>配置没问题后，选择菜单 Product &gt; Archive来将项目打包<br><img src="/images/ios_archive_organizer.png" alt=""></p>
</li>
<li><p>打包完成后，在Window &gt; Organizer &gt; Archives可以看到，点击Validate进行验证</p>
</li>
<li>按照提示的警告/错误信息进行修改，没问题后点Submit上传到iTunes Connect</li>
</ul>
<h1 id="3-_测试">3. 测试</h1>
<ul>
<li>返回iTunes Connect，在构建版本中，点击选择刚才已经上传的版本</li>
<li>点击 预发行 菜单，选择构建版本</li>
<li><p>选择内部测试员和外部测试员，一般来说内部测试员是公司内部员工，比较熟悉，外部测试员是邀请测试的用户<br><img src="/images/AddInternalTester.png" alt=""></p>
</li>
<li><p>受邀测试的人员会收到邀请邮件，安装TestFight软件后就可以下载测试版本的App进行测试了，非常方便</p>
</li>
</ul>
<h1 id="4-_审核">4. 审核</h1>
<ul>
<li>测试完成后，就可以把最新的版本提交审核，等待通过即可上线</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/app_distribute.png" alt=""></p>
]]>
    
    </summary>
    
      <category term="苹果" scheme="http://blog.ejapp.net/tags/%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="App Store" scheme="http://blog.ejapp.net/tags/App-Store/"/>
    
      <category term="开发" scheme="http://blog.ejapp.net/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建Hexo个人博客]]></title>
    <link href="http://blog.ejapp.net/2015/02/03/build-hexo-blog/"/>
    <id>http://blog.ejapp.net/2015/02/03/build-hexo-blog/</id>
    <published>2015-02-03T09:35:30.000Z</published>
    <updated>2015-02-05T06:47:15.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/hexo.jpg" alt=""></p>
<a id="more"></a>

<h1 id="0-_什么是Hexo">0. 什么是Hexo</h1>
<p>Hexo是一个功能强大的博客框架，主要使用Markdown格式来书写博客，拥有大量漂亮的主题可供选择，并且生成静态文件可供快速访问。<br>官方文档链接：<a href="http://hexo.io/docs/index.html" target="_blank" rel="external">http://hexo.io/docs/index.html</a></p>
<h1 id="1-_安装">1. 安装</h1>
<h2 id="需求">需求</h2>
<p>安装Hexo前，你需要先安装Git及Node.js</p>
<h3 id="Git">Git</h3>
<ul>
<li>Windows: 可以下载msysgit</li>
<li>Mac：可以通过Homebrw安装</li>
<li>Linux：可通过命令安装 sudo apt-get/yum install git-core</li>
</ul>
<h3 id="Node-js">Node.js</h3>
<p>先安装nvm</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>

<p>再用nvm安装Node.js</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>nvm install <span class="number">0</span>.<span class="number">10</span></div></pre></td></tr></table></figure>

<p>安装Hexo</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>npm install -g hexo</div></pre></td></tr></table></figure>

<h1 id="2-_Hexo目录结构">2. Hexo目录结构</h1>
<p>安装完Hexo后，可以使用下面命令创建一个新的项目</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo init &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>cd &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>npm install</div></pre></td></tr></table></figure>

<p>创建好后，你的项目目录结构如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml		<span class="comment"># 配置文件，大部分配置都可以在这里设置</span></div><div class="line">├── package.json	<span class="comment"># Node.js项目的配置文件</span></div><div class="line">├── scaffolds		<span class="comment"># 脚手架，基于这个来创建新文件时</span></div><div class="line">├── scripts		<span class="comment"># 脚本文件，用JavaScript来扩展Hexo</span></div><div class="line">├── <span class="built_in">source</span>		<span class="comment"># 放博客内容的源文件</span></div><div class="line">| ├── _drafts		<span class="comment"># 草稿目录，默认会被忽略</span></div><div class="line">| └── _posts		<span class="comment"># 文章目录</span></div><div class="line">└── themes		<span class="comment"># 主题目录</span></div></pre></td></tr></table></figure>

<h1 id="3-_配置及命令">3. 配置及命令</h1>
<h3 id="配置">配置</h3>
<p>配置文件为<code>_config.yml</code>，文件内的注释比较全面，大部分可以清楚知道其功能<br>也可以参考官方文档：<a href="http://hexo.io/docs/configuration.html" target="_blank" rel="external">http://hexo.io/docs/configuration.html</a></p>
<h3 id="分类及标签映射">分类及标签映射</h3>
<p>如果设置的分类及标签想跟访问路径不同，可以设置映射：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">category_map:</div><div class="line">    编程: programming</div><div class="line">    生活: life</div><div class="line">    其他: other</div><div class="line">tag_map:</div><div class="line">    产品经理: PM</div></pre></td></tr></table></figure>

<h3 id="常用命令">常用命令</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ hexo init [folder]			<span class="comment"># 新建Hexo项目</span></div><div class="line">$ hexo new [layout] &lt;title&gt;		<span class="comment"># 新建文章，模板可以换位page/photo/draft，简写n</span></div><div class="line">$ hexo generate				<span class="comment"># 生成静态文件，简写g</span></div><div class="line">$ hexo publish [layout] &lt;filename&gt;	<span class="comment"># 发布一篇草稿，简写p</span></div><div class="line">$ hexo server				<span class="comment"># 启动服务，简写s</span></div><div class="line">$ hexo deploy				<span class="comment"># 部署网站，简写d</span></div><div class="line">$ hexo clean				<span class="comment"># 清除数据库缓存及静态文件</span></div><div class="line">$ hexo list &lt;<span class="built_in">type</span>&gt;			<span class="comment"># 列出网站路由路径</span></div></pre></td></tr></table></figure>

<h1 id="4-_写作">4. 写作</h1>
<h3 id="新建文章">新建文章</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">new</span> [layout] &lt;title&gt;</div></pre></td></tr></table></figure>

<p>layout读取配置文件中<code>default_layout</code>的值，默认为post<br>如果文章标题含有空格等其他字符，可以加上双引号</p>
<h3 id="Layout">Layout</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">post		<span class="comment"># 文章，保存在_posts目录下</span></div><div class="line">photo		<span class="comment"># 图片，保存在_posts目录下</span></div><div class="line">draft		<span class="comment"># 草稿，保存在_drafts目录下</span></div><div class="line">page		<span class="comment"># 页面，保存在source目录下，可通过[网站域名+页面命]直接访问</span></div></pre></td></tr></table></figure>

<h3 id="Front-matter">Front-matter</h3>
<p>Front-matter是在文件中最顶上的内容，与正文以<code>---</code>分隔，比如：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">title: Hello World</div><div class="line"><span class="header">date: 2014/12/13 20:46:25</span></div><div class="line">---</div></pre></td></tr></table></figure>

<p>可以在Front-matter中进行以下设置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">layout		<span class="comment"># Layout，默认为post/page</span></div><div class="line">title		<span class="comment"># 文章标题</span></div><div class="line">date		<span class="comment"># 发布日期</span></div><div class="line">updated		<span class="comment"># 更新时间</span></div><div class="line">comments	<span class="comment"># 开启评论，默认true</span></div><div class="line">tags		<span class="comment"># 标签</span></div><div class="line">categories	<span class="comment"># 分类</span></div><div class="line">permalink	<span class="comment"># 链接地址设置</span></div></pre></td></tr></table></figure>

<p>其中分类及标签的设置方法如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">categories:</div><div class="line">- 学习</div><div class="line">tags:</div><div class="line">- 设计</div><div class="line">- Hexo</div></pre></td></tr></table></figure>

<h3 id="节选标记">节选标记</h3>
<p>将<code>&lt;!-- more --&gt;</code>插入文中，文章索引页将显示节选的内容。</p>
<h1 id="5-_草稿">5. 草稿</h1>
<h3 id="新建草稿">新建草稿</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new draft &lt;title&gt;</div></pre></td></tr></table></figure>

<p>将在source/_drafts目录下创建一个新文件</p>
<h3 id="预览">预览</h3>
<p>需要在<code>_config.yml</code>配置文件中将<code>render_drafts</code>设置为true</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">render_drafts: <span class="literal">true</span></div></pre></td></tr></table></figure>

<p><em>或者</em> 在开启服务<code>hexo server</code>的时候加上<code>-d</code>或<code>--drafts</code>参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server --drafts</div></pre></td></tr></table></figure>

<h3 id="发布">发布</h3>
<p>当你完成了草稿的写作，可以使用<code>hexo publish</code>命令发布</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>

<p>将会把草稿文件移动到_posts目录下，并且设置成相应的layout</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/hexo.jpg" alt=""></p>
]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.ejapp.net/tags/Hexo/"/>
    
      <category term="学习" scheme="http://blog.ejapp.net/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.ejapp.net/2015/02/01/hello-world/"/>
    <id>http://blog.ejapp.net/2015/02/01/hello-world/</id>
    <published>2015-01-31T16:00:00.000Z</published>
    <updated>2015-02-03T02:41:48.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
